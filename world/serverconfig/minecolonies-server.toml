
#All configuration items related to the citizen names
[names]
	#Should citizens have a middle initial? [Default: true]
	usemiddleinitial = true
	#Should new citizens use the Eastern name order (with their surname first)? [Default: false]
	useeasternnameorder = false
	#Male first names to be used for colonists 
	malefirstnames = ["Aarav", "Aaron", "Aayan", "Abdiel", "Alain", "Aaliyah", "Abdullah", "Abel", "Abraham", "Abram", "Ace", "Adam", "Adan", "Aden", "Adonis", "Adrian", "Adriel", "Adrien", "Ahmad", "Ahmed", "Ahmir", "Aidan", "Aiden", "Akeno", "Alan", "Alaric", "Albert", "Alberto", "Alden", "Aldo", "Alec", "Alejandro", "Alessandro", "Alex", "Alexander", "Alexis", "Alexzander", "Alfonso", "Alfred", "Alfredo", "Ali", "Alijah", "Alistair", "Allan", "Allen", "Alonso", "Alonzo", "Alvaro", "Alvin", "Amari", "Ambrose", "Ameer", "Amherst", "Amias", "Amir", "Amos", "Amrith", "Anakin", "Anders", "Anderson", "Andre", "Andres", "Andrew", "Andy", "Angel", "Angelo", "Anson", "Anthony", "Antonio", "Apollo", "Archer", "Archie", "Ares", "Ari", "Arian", "Ariel", "Aries", "Arjun", "Arlo", "Armando", "Armani", "Aroon", "Aron", "Arthur", "Arturo", "Aryan", "Asa", "Asher", "Ashton", "Atlas", "Atreus", "Atticus", "August", "Augustine", "Augustus", "Austin", "Avery", "Axel", "Axl", "Axton", "Ayaan", "Ayan", "Ayden", "Aydin", "Azariah", "Aziel", "Azrael", "Baker", "Banks", "Barnaby", "Barrett", "Bartholomew", "Baylor", "Bear", "Beau", "Beckett", "Beckham", "Bellamy", "Ben", "Benedict", "Benicio", "Benjamin", "Bennett", "Benson", "Bentlee", "Bentley", "Bernard", "Billy", "Bjorn", "Blaine", "Blaise", "Blake", "Blaze", "Bo", "Bobby", "Bode", "Boden", "Bodhi", "Bodie", "Boone", "Boston", "Bourey", "Bowen", "Braden", "Bradley", "Brady", "Brandon", "Branson", "Brantley", "Braxton", "Brayan", "Brayden", "Braydon", "Braylen", "Braylon", "Brecken", "Brendan", "Brennan", "Brentley", "Brett", "Brian", "Briar", "Bridger", "Briggs", "Brixton", "Brock", "Brodie", "Brody", "Bronson", "Brooks", "Bruce", "Bruno", "Bryan", "Bryant", "Bryce", "Brycen", "Bryson", "Byron", "Cade", "Caden", "Caiden", "Cain", "Cairo", "Caleb", "Callahan", "Callan", "Callen", "Callum", "Calum", "Calvin", "Camden", "Cameron", "Camilo", "Canaan", "Cannon", "Carl", "Carlos", "Carmelo", "Carson", "Carter", "Case", "Casen", "Casey", "Cash", "Cason", "Caspian", "Cassius", "Castiel", "Cayden", "Cayson", "Cesar", "Chaim", "Chance", "Chandler", "Charles", "Charlie", "Chase", "Chin", "Chris", "Christian", "Christopher", "Chung", "Clark", "Clay", "Clayton", "Clyde", "Cody", "Cohen", "Colby", "Cole", "Colin", "Collin", "Colson", "Colt", "Colten", "Colter", "Colton", "Conner", "Connor", "Conor", "Conrad", "Cooper", "Corbin", "Corey", "Cory", "Creed", "Crew", "Cristian", "Crosby", "Cruz", "Cullen", "Curtis", "Cuthbert", "Cyrus", "Cyrille", "Dakari", "Dakota", "Dallas", "Dalton", "Damari", "Damian", "Damien", "Damon", "Dane", "Dangelo", "Daniel", "Danny", "Dante", "Darian", "Dariel", "Dario", "Darius", "Darren", "Darwin", "Dash", "David", "Davion", "Davis", "Dawson", "Dax", "Daxton", "Dayton", "Deacon", "Dean", "Deandre", "Declan", "Demetrius", "Dennis", "Denver", "Derek", "Derrick", "Desmond", "Devin", "Devon", "Dexter", "Dhruv", "Diego", "Dilan", "Diogo", "Dillon", "Dominic", "Dominick", "Dominik", "Donald", "Donovan", "Dorian", "Douglas", "Drake", "Drew", "Duarte", "Duke", "Dustin", "Dylan", "Easton", "Eddie", "Eden", "Edgar", "Edison", "Edmund", "Eduardo", "Edward", "Edwin", "Eithan", "Eli", "Elian", "Elias", "Eliel", "Elijah", "Eliseo", "Elisha", "Elliot", "Elliott", "Ellis", "Emanuel", "Emerson", "Emery", "Emiliano", "Emilio", "Emir", "Emmanuel", "Emmett", "Emmitt", "Emory", "Enoch", "Enrique", "Enzo", "Ephraim", "Eric", "Erick", "Erik", "Ermias", "Ernesto", "Esteban", "Ethan", "Eugene", "Evan", "Everett", "Ezekiel", "Ezequiel", "Ezra", "Fabian", "Felipe", "Felix", "Félix", "Fernando", "Finley", "Finn", "Finnegan", "Finnley", "Fisher", "Fletcher", "Flynn", "Ford", "Forest", "Forrest", "Foster", "Fox", "Francis", "Francisco", "Franco", "Frank", "Franklin", "Frederick", "Fulke", "Gabriel", "Gael", "Gage", "Garrett", "Gary", "Gatlin", "Gavin", "Genesis", "Geoffrey", "George", "Gerald", "Gerardo", "Gianni", "Gideon", "Gilbert", "Giles", "Giovanni", "Gordon", "Grady", "Graham", "Grant", "Graysen", "Grayson", "Gregory", "Grey", "Greyson", "Griffin", "Guillermo", "Guewen", "Gunnar", "Gunner", "Gustavo", "Hamza", "Hank", "Harlan", "Harlem", "Harley", "Harold", "Harrison", "Harry", "Harvey", "Hassan", "Hayden", "Hayes", "Heath", "Hector", "Hendrix", "Henrik", "Henry", "Hezekiah", "Holden", "Houston", "Howard", "Hudson", "Hugh", "Hugo", "Humphrey", "Hunter", "Huxley", "Ian", "Ibrahim", "Idris", "Ignacio", "Iker", "Isaac", "Isaiah", "Isaias", "Ishaan", "Ismael", "Israel", "Issac", "Ivan", "Izaiah", "Jabari", "Jace", "Jack", "Jackie", "Jackson", "Jacob", "Jacoby", "Jad", "Jaden", "Jadiel", "Jagger", "Jaiden", "Jaime", "Jair", "Jairo", "Jakari", "Jake", "Jakob", "Jalen", "Jamal", "Jamari", "James", "Jameson", "Jamie", "Jamir", "Jamison", "Jared", "Jase", "Jasiah", "Jason", "Jasper", "Javier", "Javion", "Jax", "Jaxen", "Jaxon", "Jaxson", "Jaxton", "Jaxx", "Jaxxon", "Jay", "Jayce", "Jayceon", "Jayden", "Jaylen", "Jayson", "Jaziel", "Jedidiah", "Jefferson", "Jeffery", "Jeffrey", "Jensen", "Jeremiah", "Jeremias", "Jeremy", "Jericho", "Jermaine", "Jerome", "Jerry", "Jesiah", "Jesse", "Jesus", "Jett", "Jimmy", "Jin", "Joaquin", "Joe", "Joel", "Joey", "Johan", "John", "Johnathan", "Johnny", "Jon", "Jonah", "Jonas", "Jonathan", "Jordan", "Jordy", "Jorge", "Jose", "Joseph", "Joshua", "Josiah", "Josue", "Jovanni", "Joziah", "Juan", "Judah", "Jude", "Judson", "Juelz", "Julian", "Julien", "Julio", "Julius", "Junior", "Justice", "Justin", "Kabir", "Kace", "Kade", "Kaden", "Kai", "Kaiden", "Kairo", "Kaiser", "Kaison", "Kaleb", "Kalel", "Kamari", "Kamden", "Kamdyn", "Kameron", "Kamryn", "Kane", "Kannon", "Kareem", "Karsen", "Karson", "Karter", "Kase", "Kasem", "Kasen", "Kash", "Kashton", "Kason", "Kayden", "Kaysen", "Kayson", "Keanu", "Keaton", "Keegan", "Keenan", "Keith", "Kellan", "Kellen", "Kelvin", "Kendrick", "Kenneth", "Kenny", "Kenzo", "Kevin", "Kysen", "Khalid", "Khalil", "Khari", "Kiaan", "Kian", "Kieran", "Killian", "King", "Kingsley", "Kingston", "Kishore", "Knox", "Koa", "Kobe", "Koda", "Kody", "Kohen", "Kole", "Kolten", "Kolton", "Korbin", "Krew", "Kristian", "Kristopher", "Kye", "Kylan", "Kyle", "Kylen", "Kyler", "Kylian", "Kylo", "Kyng", "Kyree", "Kyrie", "Kyro", "Kyson", "Lachlan", "Lance", "Lancelot", "Landen", "Landon", "Landry", "Landyn", "Lane", "Langston", "Larry", "Lawrence", "Lawson", "Layne", "Layton", "Leandro", "Ledger", "Lee", "Legacy", "Legend", "Leighton", "Leland", "Lennon", "Lennox", "Leo", "Leon", "Leonard", "Leonardo", "Leonel", "Leonidas", "Leroy", "Levi", "Lewis", "Liam", "Lian", "Lincoln", "Lionel", "Lochlan", "Logan", "Lorenzo", "Louie", "Louis", "Luca", "Lucas", "Lucca", "Lucian", "Luciano", "Luis", "Luka", "Lukas", "Luke", "Lyle", "Mac", "Mack", "Madden", "Maddox", "Magnus", "Maison", "Major", "Makai", "Malachi", "Malakai", "Malakhi", "Malcolm", "Malik", "Manuel", "Marc", "Marcel", "Marcellus", "Marcelo", "Marco", "Marcos", "Marcus", "Mario", "Mark", "Marlon", "Marquis", "Marshall", "Martin", "Marvin", "Mason", "Mateo", "Mathew", "Mathias", "Matias", "Matteo", "Matthew", "Matthias", "Maurice", "Mauricio", "Maverick", "Max", "Maxim", "Maximilian", "Maximiliano", "Maximo", "Maximus", "Maxton", "Maxwell", "Mayson", "Mekhi", "Melvin", "Memphis", "Merrick", "Messiah", "Micah", "Michael", "Miguel", "Mike", "Milan", "Miles", "Miller", "Milo", "Misael", "Mitchell", "Mohamed", "Mohammed", "Moises", "Mordechai", "Morgan", "Moses", "Moshe", "Muhammad", "Musa", "Mustafa", "Myles", "Mylo", "Nash", "Nasir", "Nathan", "Nathanael", "Nathaniel", "Naveen", "Nehemiah", "Neil", "Nelson", "Nicholas", "Nico", "Nicolas", "Niklaus", "Niko", "Nikolai", "Nikolas", "Nixon", "Noah", "Noe", "Noel", "Nolan", "Nova", "Oakley", "Odin", "Oliver", "Omar", "Omari", "Onyx", "Orion", "Orlando", "Oscar", "Oswyn", "Otis", "Otto", "Owen", "Pablo", "Papoo", "Parker", "Patrick", "Paul", "Paxton", "Pedro", "Peter", "Peyton", "Philip", "Phillip", "Phoenix", "Pierce", "Piers", "Porter", "Prasad", "Preston", "Prince", "Princeton", "Quentin", "Quincy", "Quinn", "Quinton", "Rafael", "Raiden", "Ralph", "Ramon", "Randy", "Raphael", "Raul", "Ray", "Rayan", "Rayden", "Raylan", "Raymond", "Reece", "Reed", "Reese", "Reginald", "Reid", "Reign", "Remi", "Remington", "Remy", "Rénald", "Rene", "Reynold", "Reynolds", "Reuben", "Rex", "Rey", "Reyansh", "Rhett", "Rhys", "Ricardo", "Richard", "Ricky", "Ridge", "Riley", "River", "Robert", "Roberto", "Robin", "Rocco", "Rocky", "Rodney", "Rodrigo", "Roger", "Rohan", "Roland", "Roman", "Rome", "Romeo", "Ronald", "Ronan", "Ronin", "Ronnie", "Rory", "Rowan", "Rowen", "Rowland", "Roxan", "Roy", "Royal", "Royce", "Ruben", "Rudy", "Russell", "Ryan", "Ryder", "Ryker", "Rylan", "Ryland", "Sage", "Sai", "Saint", "Salem", "Salvador", "Salvatore", "Sam", "Samir", "Samson", "Samuel", "Santana", "Santiago", "Santino", "Santos", "Saul", "Sawyer", "Scott", "Sean", "Sebastian", "Sekani", "Sergio", "Seth", "Seven", "Shane", "Shawn", "Shepherd", "Shiloh", "Silas", "Simeon", "Simon", "Sincere", "Skyler", "Solomon", "Sonny", "Soren", "Spencer", "Stanley", "Stefan", "Stephen", "Sterling", "Stetson", "Steven", "Stone", "Sullivan", "Sutton", "Sylas", "Tadeo", "Talon", "Tanner", "Tate", "Tatum", "Taylor", "Terrance", "Terry", "Thaddee", "Thaddeus", "Thatcher", "Theo", "Theodore", "Thiago", "Thomas", "Timothy", "Titan", "Titus", "Tobias", "Toby", "Tomas", "Tommy", "Tony", "Trace", "Travis", "Trent", "Trenton", "Trevor", "Trey", "Tripp", "Tristan", "Tristen", "Tristian", "Troy", "Tru", "Tucker", "Turner", "Ty", "Tyler", "Tyson", "Ulises", "Uriah", "Uriel", "Valentin", "Valentino", "Van", "Vance", "Vicente", "Victor", "Vihaan", "Vincent", "Vincenzo", "Vivaan", "Wade", "Walker", "Wallace", "Walter", "Warren", "Watson", "Waylon", "Wayne", "Wells", "Wes", "Wesley", "Wesson", "Westin", "Westley", "Weston", "Wilder", "Will", "William", "Wilson", "Winston", "Wyatt", "Xander", "Xavier", "Xzavier", "Yadiel", "Yael", "Yahir", "Yahya", "Yas", "Yehuda", "Yisroel", "Yosef", "Yousef", "Yusuf", "Zachariah", "Zachary", "Zahir", "Zaid", "Zaiden", "Zain", "Zaire", "Zakai", "Zander", "Zane", "Zavier", "Zayd", "Zayden", "Zayn", "Zayne", "Zechariah", "Zeke", "Zion", "Zyaire", "Zyon"]
	#Female first names to be used for colonists 
	femalefirstnames = ["Aaliyah", "Abby", "Abigail", "Ada", "Adah", "Adair", "Adalee", "Adaline", "Adalyn", "Adalynn", "Addilyn", "Addilynn", "Addison", "Addisyn", "Addyson", "Adelaide", "Adele", "Adelina", "Adeline", "Adelyn", "Adelynn", "Adley", "Adriana", "Adrianna", "Agnes", "Aila", "Ailani", "Aileen", "Ainhoa", "Ainsley", "Aisha", "Aitana", "Alaia", "Alaina", "Alaiya", "Alana", "Alani", "Alanna", "Alannah", "Alaya", "Alayah", "Alayna", "Aleah", "Aleena", "Alejandra", "Alena", "Alessandra", "Alessia", "Alexa", "Alexandra", "Alexandria", "Alexia", "Alexis", "Alia", "Aliana", "Alianna", "Alice", "Alicia", "Alina", "Alison", "Alisson", "Alivia", "Aliya", "Aliyah", "Aliza", "Allie", "Allison", "Allyson", "Alma", "Alondra", "Alora", "Alyson", "Alyssa", "Amaia", "Amalia", "Amanda", "Amani", "Amara", "Amari", "Amaris", "Amaya", "Amayah", "Amber", "Amelia", "Amelie", "Amina", "Amira", "Amirah", "Amitha", "Amiya", "Amiyah", "Amora", "Amoura", "Amy", "Ana", "Anahi", "Anais", "Analia", "Anastasia", "Anaya", "Andi", "Andrea", "Angel", "Angela", "Angelica", "Angelina", "Angie", "Anika", "Aniya", "Aniyah", "Ann", "Anna", "Annabella", "Annabelle", "Annalise", "Anne", "Annie", "Annika", "Ansley", "Antonella", "Anya", "April", "Arabella", "Arden", "Ari", "Aria", "Ariadne", "Ariah", "Ariana", "Arianna", "Ariel", "Ariella", "Arielle", "Ariya", "Ariyah", "Arlette", "Armani", "Arya", "Ashley", "Ashlyn", "Ashlynn", "Aspen", "Astrid", "Athena", "Aubree", "Aubrey", "Aubrie", "Aubriella", "Aubrielle", "Audrey", "August", "Aurelia", "Aurora", "Austyn", "Autumn", "Ava", "Avah", "Avalynn", "Averi", "Averie", "Avery", "Aviana", "Avianna", "Aya", "Ayla", "Ayleen", "Aylin", "Azalea", "Azariah", "Azra", "Bailee", "Bailey", "Barbara", "Baylee", "Beatrice", "Beatrix", "Belen", "Bella", "Belle", "Berkley", "Bethany", "Betty", "Bexley", "Bianca", "Blair", "Blaire", "Blakely", "Blanche", "Bonnie", "Braelyn", "Braelynn", "Braylee", "Bria", "Briana", "Brianna", "Briar", "Bridget", "Briella", "Brielle", "Brinley", "Bristol", "Brittany", "Brooke", "Brooklyn", "Brooklynn", "Brylee", "Brynlee", "Brynn", "Cadence", "Cali", "Callie", "Calliope", "Cameron", "Camila", "Camilla", "Camille", "Camryn", "Carly", "Carmen", "Carolina", "Caroline", "Carolyn", "Casey", "Cassandra", "Cassidy", "Cataleya", "Catalina", "Catherine", "Cecelia", "Cecilia", "Celeste", "Celia", "Celine", "Cecily", "Chana", "Chandler", "Chanel", "Charity", "Charlee", "Charleigh", "Charley", "Charli", "Charlie", "Charlotte", "Chaya", "Chelsea", "Cheyenne", "Chloe", "Christina", "Christine", "Cindy", "Claire", "Clara", "Clare", "Clarissa", "Clemence", "Clementine", "Cleo", "Colette", "Collins", "Constance", "Cora", "Coraline", "Corinne", "Crystal", "Cynthia", "Dahlia", "Daisy", "Dakota", "Dalary", "Daleyza", "Dallas", "Dana", "Dani", "Daniela", "Daniella", "Danielle", "Danna", "Daphne", "Davina", "Dayana", "Deborah", "Delaney", "Delilah", "Della", "Demi", "Denise", "Denver", "Destiny", "Diana", "Dior", "Dixie", "Dorothy", "Dream", "Dulce", "Dylan", "Ecrin", "Eden", "Edith", "Egypt", "Eileen", "Elaina", "Elaine", "Eleanor", "Elena", "Eliana", "Elianna", "Elif", "Elina", "Elinor", "Elisa", "Elisabeth", "Elise", "Eliza", "Elizabeth", "Ella", "Elle", "Ellen", "Elliana", "Ellianna", "Ellie", "Elliot", "Elliott", "Ellis", "Ellison", "Elodie", "Eloise", "Elora", "Elsa", "Elsie", "Elyse", "Emani", "Ember", "Emberly", "Emelia", "Emely", "Emerald", "Emerie", "Emerson", "Emersyn", "Emery", "Emilee", "Emilia", "Emily", "Emma", "Emmaline", "Emmalyn", "Emmalynn", "Emmeline", "Emilienne", "Emmie", "Emmy", "Emory", "Ensley", "Erika", "Erin", "Esme", "Esmeralda", "Esperanza", "Estella", "Estelle", "Esther", "Estrella", "Eva", "Evangeline", "Eve", "Evelyn", "Evelynn", "Everlee", "Everleigh", "Everly", "Evie", "Ezra", "Faith", "Fallon", "Fatima", "Faye", "Felicity", "Fernanda", "Filipa", "Finley", "Fiona", "Flora", "Florence", "Fortune", "Frances", "Francesca", "Frankie", "Frideswide", "Gabriela", "Gabriella", "Gabrielle", "Galilea", "Gemma", "Genesis", "Genevieve", "Georgia", "Gia", "Giana", "Gianna", "Frédérique", "Freya", "Freyja", "Frida", "Gillian", "Giovanna", "Giselle", "Giuliana", "Gloria", "Grace", "Gracelyn", "Gracelynn", "Gracie", "Greta", "Guadalupe", "Gwen", "Gwendolyn", "Hadassah", "Hadlee", "Hadleigh", "Hadley", "Hailee", "Hailey", "Haisley", "Haley", "Halle", "Hallie", "Halo", "Hana", "Hanna", "Hannah", "Harlee", "Harleigh", "Harley", "Harlow", "Harmoni", "Harmony", "Harper", "Harriet", "Hattie", "Haven", "Hayden", "Haylee", "Hayley", "Haylie", "Hazel", "Heaven", "Heidi", "Helen", "Helena", "Henley", "Holland", "Holly", "Hope", "Hunter", "Iliana", "Imani", "India", "Indie", "Ingrid", "Irene", "Iris", "Isabel", "Isabela", "Isabella", "Isabelle", "Isla", "Ismena", "Itzayana", "Itzel", "Ivanna", "Ivory", "Ivy", "Izabella", "Jacqueline", "Jada", "Jade", "Jaelyn", "Jaelynn", "Jaliyah", "Jamie", "Jane", "Janelle", "Janet", "Janiyah", "Jasmine", "Jaycee", "Jayda", "Jayde", "Jayla", "Jaylah", "Jaylee", "Jayleen", "Jazlyn", "Jazmin", "Jazmine", "Jemma", "Jenesis", "Jenna", "Jennifer", "Jessica", "Jessie", "Jewel", "Jillian", "Jimena", "Joan", "Joanna", "Jocelyn", "Joelle", "Johanna", "Jolene", "Jolie", "Jordan", "Jordyn", "Josephine", "Josian", "Josie", "Journee", "Journey", "Journi", "Joy", "Joyce", "Judith", "Julia", "Juliana", "Julianna", "Julie", "Juliet", "Julieta", "Juliette", "Julissa", "June", "Juniper", "Justice", "Kai", "Kaia", "Kailani", "Kailey", "Kairi", "Kaisley", "Kaitlyn", "Kaiya", "Kalani", "Kali", "Kaliyah", "Kallie", "Kamari", "Kamila", "Kamilah", "Kamiyah", "Kamryn", "Kara", "Karen", "Karina", "Karisa", "Karla", "Karlee", "Karsyn", "Karter", "Kassidy", "Kataleya", "Katalina", "Kate", "Katelyn", "Katherine", "Kathleen", "Kathryn", "Katia", "Katie", "Kaya", "Kaydence", "Kayla", "Kaylani", "Kaylee", "Kayleigh", "Kaylie", "Kaylin", "Kehlani", "Keilani", "Keily", "Keira", "Kelly", "Kelsey", "Kendall", "Kendra", "Kenia", "Kenna", "Kennedi", "Kennedy", "Kensley", "Kenzie", "Keyla", "Khaleesi", "Khloe", "Kiana", "Kiara", "Kiera", "Kimber", "Kimberly", "Kimora", "Kinley", "Kinslee", "Kinsley", "Kira", "Kiyoshi", "Kora", "Kori", "Kyla", "Kylee", "Kyleigh", "Kylie", "Kynlee", "Kyra", "Lacey", "Laila", "Lailah", "Lainey", "Lana", "Landry", "Laney", "Lara", "Laura", "Laurel", "Lauren", "Lauryn", "Layla", "Laylah", "Lea", "Leah", "Leanna", "Lee", "Legacy", "Leia", "Leighton", "Leila", "Leilani", "Lena", "Lennon", "Lennox", "Leona", "Leslie", "Lettice", "Lexi", "Lexie", "Leyla", "Lia", "Liana", "Liberty", "Lila", "Lilah", "Lilian", "Liliana", "Lilianna", "Lilith", "Lillian", "Lilliana", "Lillie", "Lilly", "Lily", "Lilyana", "Lina", "Linda", "Lindsey", "Lisa", "Liv", "Livia", "Logan", "Lola", "London", "Londyn", "Lorelai", "Lorelei", "Lorena", "Louisa", "Louise", "Luana", "Lucia", "Luciana", "Lucille", "Lucy", "Luella", "Luisa", "Luna", "Luz", "Lyanna", "Lydia", "Lyla", "Lylah", "Lyra", "Mabel", "Maci", "Macie", "Mackenzie", "Macy", "Madalyn", "Madalynn", "Maddison", "Madeleine", "Madeline", "Madelyn", "Madelynn", "Madilyn", "Madilynn", "Madison", "Madisyn", "Mae", "Maeve", "Magdalena", "Maggie", "Magnolia", "Maia", "Maisie", "Maisy", "Makayla", "Makenna", "Makenzie", "Malani", "Malaya", "Malayah", "Malaysia", "Maleah", "Malia", "Maliah", "Maliyah", "Mallory", "Mara", "Maren", "Margaret", "Margery", "Margo", "Margot", "Maria", "Mariah", "Mariam", "Mariana", "Marianna", "Marie", "Marilyn", "Marina", "Marine", "Marion", "Marissa", "Marlee", "Marley", "Martha", "Mary", "Maryam", "Matilda", "Maud", "Mavis", "Maxine", "Maya", "Mckenna", "Mckenzie", "Mckinley", "Meadow", "Megan", "Meghan", "Meilani", "Mildred", "Milena", "Miley", "Millicent", "Millie", "Mina", "Mira", "Miracle", "Miranda", "Miriam", "Molly", "Monica", "Monroe", "Morgan", "Mya", "Myah", "Myla", "Mylah", "Myra", "Nadia", "Nala", "Nalani", "Nancy", "Naomi", "Natalia", "Natalie", "Nataly", "Natasha", "Nathalie", "Navy", "Nayeli", "Nellie", "Nevaeh", "Nia", "Mélanie", "Melanie", "Melany", "Melina", "Melissa", "Melody", "Mercy", "Meredith", "Mia", "Miah", "Micah", "Michaela", "Michelle", "Mikaela", "Mikayla", "Mila", "Milan", "Milana", "Milani", "Niamh", "Nicole", "Nina", "Noa", "Noelle", "Noemi", "Nola", "Noor", "Nora", "Norah", "Nova", "Novah", "Novalee", "Nyla", "Nylah", "Oaklee", "Oakleigh", "Oakley", "Oaklyn", "Oaklynn", "Octavia", "Odile", "Olive", "Olivia", "Opal", "Ophelia", "Osamu", "Paige", "Paislee", "Paisleigh", "Paisley", "Paityn", "Palmer", "Paloma", "Paola", "Paris", "Parker", "Parnell", "Patricia", "Paula", "Paulina", "Payton", "Pearl", "Penelope", "Penny", "Persephone", "Peyton", "Phoebe", "Phoenix", "Philippa", "Piper", "Poppy", "Presley", "Princess", "Priscilla", "Promise", "Prudence", "Queen", "Quinn", "Rachel", "Raegan", "Raelyn", "Raelynn", "Raina", "Ramona", "Raquel", "Raven", "Rayna", "Rayne", "Reagan", "Rebecca", "Rebekah", "Reese", "Regina", "Reign", "Reina", "Remi", "Remington", "Remy", "Renata", "Renee", "Renu", "Reyna", "Rhea", "Riley", "River", "Rivka", "Robin", "Romina", "Rory", "Rosa", "Rosalee", "Rosalie", "Rosalyn", "Rose", "Roselyn", "Rosemary", "Roshni", "Rosie", "Rowan", "Royal", "Royalty", "Ruby", "Ruth", "Ryan", "Ryann", "Rylan", "Rylee", "Ryleigh", "Rylie", "Sabrina", "Sadie", "Sage", "Saige", "Salem", "Salma", "Samantha", "Samara", "Samira", "Sandra", "Saoirse", "Sara", "Sarah", "Sarai", "Sariah", "Sariyah", "Sasha", "Savanna", "Savannah", "Sawyer", "Saylor", "Scarlet", "Scarlett", "Scarlette", "Selah", "Selena", "Selene", "Serena", "Serenity", "Sevyn", "Shelby", "Sherri", "SherriLee", "SherriLyn", "SherriLynn", "SherriLynne", "Shiloh", "Siena", "Sienna", "Sierra", "Simone", "Sky", "Skye", "Skyla", "Skylar", "Skyler", "Sloan", "Sloane", "Sofia", "Sophia", "Sophie", "Stella", "Stef", "Stefi", "Stephanie", "Summer", "Sunny", "Susanna", "Sutton", "Sybil", "Sydney", "Sylvia", "Sylvie", "Talia", "Taliyah", "Tatiana", "Tatum", "Taylor", "Teagan", "Tenley", "Teresa", "Tessa", "Thalia", "Thea", "Theodora", "Thomasin", "Tiana", "Tiffany", "Tinley", "Tinsley", "Tori", "Treasure", "Trinity", "Ursula", "Vada", "Valentina", "Valeria", "Valerie", "Valery", "Vanessa", "Vérane", "Veda", "Vera", "Veronica", "Victoria", "Vienna", "Violet", "Violeta", "Virginia", "Vivian", "Viviana", "Vivienne", "Waverly", "Whitley", "Whitney", "Willa", "Willow", "Wilmot", "Winifred", "Winnie", "Winter", "Wren", "Wynter", "Ximena", "Xiomara", "YiaYia", "Yara", "Yareli", "Yaretzi", "Yaritza", "Yasmin", "Zahra", "Zainab", "Zaniyah", "Zara", "Zaria", "Zariah", "Zariyah", "Zaylee", "Zelda", "Zendaya", "Zoe", "Zoey", "Zoie", "Zola", "Zora", "Zuri"]
	#Last names to be used for colonists 
	lastnames = ["Abell", "Ackworth", "Adams", "Addicock", "Alban", "Aldebourne", "Alessi", "Alfray", "Alicock", "Allard", "Allington", "Amberden", "Amcotts", "Amondsham", "Andrews", "Annesley", "Ansty", "Archer", "Ardall", "Ardern", "Argentein", "Arnold", "Asger", "Ashby", "Ashcombe", "Ashenhurst", "Ashton", "Askew", "Asplin", "Astley", "Atherton", "Atkinson", "Atlee", "Attilburgh", "Audeley", "Audlington", "Ayde", "Ayleward", "Aylmer", "Aynesworth", "Babham", "Babington", "Badby", "Baker", "Balam", "Baldwin", "Ballard", "Ballett", "Bammard", "Barber", "Bardolf", "Barefoot", "Barker", "Barnes", "Barre", "Barrentine", "Barrett", "Barstaple", "Bartelot", "Barton", "Basset", "Bathurst", "Battersby", "Battle", "Baynton", "Beauchamp", "Bell", "Brown", "Chandru", "Cheddar", "Chelsey", "Chernock", "Chester", "Chetwood", "Cheverell", "Cheyne", "Chichester", "Chilton", "Chowne", "Chudderley", "Church", "Churmond", "Clark", "Clavell", "Claybrook", "Clement", "Clerk", "Clifford", "Clifton", "Clitherow", "Clopton", "Cobb", "Cobham", "Cobley", "Cockayne", "Cod", "Coddington", "Coffin", "Coggshall", "Colby", "Colkins", "Collard", "Colmer", "Colt", "Colthurst", "Complin", "Compton", "Conquest", "Cooke", "Coorthopp", "Coppinger", "Corbett", "Corby", "Cortez", "Cossington", "Cosworth", "Cotton", "Courtenay", "Covert", "Cowill", "Cox", "Crane", "Cranford", "Crawley", "Cressy", "Crickett", "Cripps", "Crisp", "Cristemas", "Crocker", "Crugg", "Cuddon", "Culpepper", "Cunningham", "Curzon", "Cushing", "Cutter", "Dagworth", "Dumas", "Fletcher", "Fudd", "Fuentes", "Gardiner", "Gare", "Garnis", "Garrard", "Garret", "Gascoigne", "Gasper", "Gaur", "Gavell", "Gedding", "Gerville", "Geste", "Gibbs", "Gifford", "Gill", "Ginter", "Gisborne", "Gittens", "Glennon", "Glover", "Gobberd", "Goddam", "Godfrey", "Gold", "Golding", "Goldwell", "Gomershall", "Gomfrey", "Gonson", "Good", "Goodenouth", "Gooder", "Goodluck", "Goodnestone", "Goodrick", "Goodrington", "Goodwin", "Gordon", "Goring", "Gorney", "Gorst", "Gosebourne", "Grafton", "Gray", "Greene", "Greenway", "Grenefeld", "Greville", "Grey", "Grimbald", "Grobbam", "Grofhurst", "Groston", "Grove", "Guildford", "Gupta", "Hackman", "Haddock", "Haddon", "Hadresham", "Hakebourne", "Hale", "Hall", "Halley", "Hambard", "Hammer", "Hammond", "Hampden", "Harris", "Ito", "Jalin", "Janeli", "Johnson", "Johnston", "Jones", "Karpinksi", "Kemp", "Kennedy", "Kolanowski", "Kravitz", "Kumar", "LaClair", "Madden", "Mardle", "McCarthy", "McDonald", "McGee", "McKenzie", "Mekkelsen", "Mello", "Miller", "Nair", "Pericherla", "Rao", "Reddy", "Revaluri", "Rhino", "Robinson", "Skellett", "Smith", "Souri", "Sparrow", "Taylor", "Thorpe", "Wallgreen", "Walsh", "White", "Williams", "Wilson"]

#All configuration items related to the core gameplay
[gameplay]
	#Amount of initial citizens. [Default: 4, min: 1, max: 10]
	#Range: 1 ~ 10
	initialcitizenamount = 4
	#Should construction tape be placed around in-construction builds? [Default: true]
	builderplaceconstructiontape = true
	#Should players be able to place an infinite amount of supply camps/ships? [Default: false]
	allowinfinitesupplychests = false
	#Should players be allowed to abandon their colony to create a new one easily? Note: This is buggy! [Default: false]
	allowinfinitecolonies = false
	#Should colonies in other dimensions be allowed? [Default: false]
	allowotherdimcolonies = false
	#If a colony is under the initial citizen count, this changes the amount of time before a new citizen spawns. [Default: 60, min: 10, max: 600]
	#Range: 10 ~ 600
	citizenrespawninterval = 60
	#Max citizens in one colony. [Default: 150, min: 4, max: 500]
	#Range: 4 ~ 500
	maxcitizenpercolony = 150
	#Should the Builder and Miner build without resources? (This also turns off what the Miner produces.) [Default: false]
	builderinfiniteresources = false
	#Should there be a max of 1 warehouse per colony? [Default: true]
	limittoonewarehousepercolony = true
	#Delay after each block placement (increasing it increases the delay). [Default: 15, min: 1, max: 500]
	#Range: 1 ~ 500
	builderbuildblockdelay = 15
	#Delay modifier to mine a block (decreasing it decreases the delay). [Default: 500, min: 1, max: 10000]
	#Range: 1 ~ 10000
	blockminingdelaymodifier = 500
	#Should development features be enabled (might be buggy)? [Default: false]
	enableindevelopmentfeatures = false
	#Should citizen name tags be rendered? [Default: true]
	alwaysrendernametag = true
	#Child growth modifier. On average children take about 60min to grow at 1.0x modifier (the default). 5 = 5x as fast. [Default: 1.000000, min: 1.000000, max: 100.000000]
	#Range: 1.0 ~ 100.0
	growthmodifier = 1.0
	#Should workers work during the rain? [Default: false]
	workersalwaysworkinrain = false
	#Should players be sent entering/leaving colony notifications? [Default: true]
	sendenteringleavingmessages = true
	#Should players be allowed to change citizen names? -1 for false, 0 for certain players only, 1 for true. (To set which players can change the names, see "Special Permissions Group" below.) [Default: 1, min: -1, max: 1]
	#Range: -1 ~ 1
	allowglobalnamechanges = 1
	#Should special holiday content be displayed? [Default: true]
	holidayfeatures = true
	#AI Update rate. Increase this to improve performance. This throttles citizen updates. [Default: 1, min: 1, max: 100]
	#Range: 1 ~ 100
	updaterate = 1
	#Quantity of dirt per compost filling. [Default: 1, min: 0, max: 100]
	#Range: 0 ~ 100
	dirtfromcompost = 1
	#Chance for the Miner to get an ore when mining cobblestone or stone (by default, can be expanded with datapacks to other materials). This is a percentage. (To change which ores the Miner can find, see "List of Lucky Ores".) [Default: 1, min: 0, max: 100]
	#Range: 0 ~ 100
	luckyblockchance = 1
	#Automatically fix orphaned chunks which were caused by chunk loading and saving issues. [Default: false]
	fixorphanedchunks = false
	#Should the Builder be slower when working underground? [Default: true]
	restrictbuilderunderground = true
	#Chance to get a sponge from the Fisher (starting at hut level 4). [Default: 0.100000, min: 0.000000, max: 100.000000]
	#Range: 0.0 ~ 100.0
	fisherspongechance = 0.1
	#Chance to get a prismarine shard or crystal drop from the Fisher (starting at hut level 3). Overall chance of prismarine is 2x this number. [Default: 2.500000, min: 0.000000, max: 100.000000]
	#Range: 0.0 ~ 100.0
	fisherprismarinechance = 2.5
	#The minimum level a Town Hall has to be to allow teleportation to allied colonies. [Default: 3, min: 0, max: 5]
	#Range: 0 ~ 5
	minthleveltoteleport = 3
	#Suggest build tool usage when trying to place a building without the build tool. [Default: true]
	suggestbuildtoolplacement = true
	#Food consumption modifier. [Default: 1.000000, min: 0.100000, max: 100.000000]
	#Range: 0.1 ~ 100.0
	foodmodifier = 1.0
	#How common diseases are. 1 = Very common, 100 = extremely rare. [Default: 5, min: 1, max: 100]
	#Range: 1 ~ 100
	diseasemodifier = 5
	#If part of the colony is loaded by an owner/officer, the entire colony should be kept loaded. [Default: false]
	forceloadcolony = false
	#Chance to get an evil Tavern visitor that will run off with the resources you give them. This is a %. [Default: 2] [Default: 2, min: 1, max: 100]
	#Range: 1 ~ 100
	badvisitorchance = 2

#All configurations related to the MineColonies commands
[commands]
	#Should players be allowed to use the /mc rtp command? [Default: true]
	canplayerusertpcommand = true
	#Should players be allowed to use the /mc colony teleport command? [Default: false]
	canplayerusecolonytpcommand = false
	#Can players teleport to allied colonies? [Default: true]
	canplayeruseallytownhallteleport = true
	#Should players be allowed to use the /mc home command? Note: Only owners of the colony can use this command. [Default: true]
	canplayerusehometpcommand = true
	#Should players be allowed to use the /mc colony info command? [Default: true]
	canplayeruseshowcolonyinfocommand = true
	#Should players be allowed to use the /mc citizens kill command? [Default: true]
	canplayerusekillcitizenscommand = true
	#Should players be allowed to use the /mc colony addOfficer command? [Default: true]
	canplayeruseaddofficercommand = true
	#Should players be allowed to use the /mc colony delete command? [Default: true]
	canplayerusedeletecolonycommand = true
	#Amount of attempts to find a safe random teleport (with /mc rtp). [Default: 4, min: 1, max: 10]
	#Range: 1 ~ 10
	numberofattemptsforsafetp = 4

#All configuration related to mod compatibility
[claims]
	#Maximum claim range for a colony. This is the radius, measured in chunks. [Default: 20, min: 1, max: 50]
	#Range: 1 ~ 50
	maxColonySize = 20
	#The minimum distance (in chunks) between colonies. [Default: 8, min: 1, max: 200]
	#Range: 1 ~ 200
	minColonyDistance = 8
	#Initial claim size for a colony. This is the radius, measured in chunks. [Default: 4, min: 1, max: 200]
	#Range: 1 ~ 200
	initialColonySize = 4
	#Should the min/max distance from spawn also affect colony placement? [Default: false]
	restrictcolonyplacement = false
	#Max distance (in blocks) from world spawn for a colony. [Default: 8000, min: 1000, max: 100000]
	#Range: 1000 ~ 100000
	maxdistancefromworldspawn = 8000
	#Min distance (in blocks) from world spawn for a colony. [Default: 512, min: 1, max: 1000]
	#Range: 1 ~ 1000
	mindistancefromworldspawn = 512
	#Should officers of a colony receive advancements from that colony? [Default: true]
	officersreceiveadvancements = true

#All configuration items related to the combat elements of MineColonies
[combat]
	#Whether or not to spawn raiders. [Default: true]
	dobarbariansspawn = true
	#The difficulty setting for raiders. [Default: 5, min: 0, max: 10]
	#Range: 0 ~ 10
	barbarianhordedifficulty = 5
	#The min size of a raider horde. [Default: 5, min: 1, max: 10]
	#Range: 1 ~ 10
	spawnbarbariansize = 5
	#The max size of a raider horde. [Default: 80, min: 6, max: 400]
	#Range: 6 ~ 400
	maxBarbarianSize = 80
	#Whether or not raiders can break, scale, and bridge obstacles. [Default: true]
	dobarbariansbreakthroughwalls = true
	#The average number of nights between raids. [Default: 12, min: 1, max: 50]
	#Range: 1 ~ 50
	averagenumberofnightsbetweenraids = 12
	#The minimum number of nights between raids. [Default: 8, min: 1, max: 30]
	#Range: 1 ~ 30
	minimumnumberofnightsbetweenraids = 8
	#Should mobs attack citizens? [Default: true]
	mobattackcitizens = true
	#Whether or not raiders can break through doors. [Default: true]
	shouldraiderbreakdoors = true
	#Should citizens call Guards for help when attacked? [Default: true]
	citizencallforhelp = true
	#Should Archer Guards benefit from Power/Punch/Flame enchants (on bows)? [Default: true]
	rangerenchants = true
	#Attack damage multiplier for Archer Guards. [Default: 1.000000, min: 0.100000, max: 5.000000]
	#Range: 0.1 ~ 5.0
	rangerdamagemult = 1.0
	#Attack damage multiplier for Knight Guards. [Default: 1.000000, min: 0.100000, max: 5.000000]
	#Range: 0.1 ~ 5.0
	knightdamagemult = 1.0
	#Health multiplier for all Guards. [Default: 1.000000, min: 0.100000, max: 5.000000]
	#Range: 0.1 ~ 5.0
	guardhealthmult = 1.0
	#Turn on MineColonies PVP mode (colonies can be destroyed and griefed under certain conditions). [Default: false]
	pvp_mode = false
	#Days until the pirate ships despawn. [Default: 3, min: 1, max: 10]
	#Range: 1 ~ 10
	daysuntilpirateshipsdespawn = 3
	#Max Y level (height) for Raiders to spawn. [Default: 200, min: 1, max: 500]
	#Range: 1 ~ 500
	maxyforbarbarians = 200

#All permission configuration options
[permissions]
	#Should colony protection be enabled? [Default: true]
	enablecolonyprotection = true
	#Independent from the colony protection, should explosions be turned off inside colonies? [Default: true]
	turnoffexplosionsincolonies = true
	#Players who have special permissions, especially to change citizen names (see "Name Changes" above). 
	specialpermgroup = ["_Raycoms_"]
	#Blocks players should be able to interact with in any colony (ex: vending machines) 
	freetointeractblocks = ["dirt", "0 0 0"]
	#Seconds between each permission message (to reduce spam). [Default: 30, min: 1, max: 1000]
	#Range: 1 ~ 1000
	secondsBetweenPermissionMessages = 30

#All configuration related to mod compatibility
[compatibility]
	#List of recognized and enabled tags. 
	enabledmodtags = ["minecraft:wool", "minecraft:planks", "minecraft:stone_bricks", "minecraft:wooden_buttons", "minecraft:buttons", "minecraft:carpets", "minecraft:wooden_doors", "minecraft:wooden_stairs", "minecraft:wooden_slabs", "minecraft:wooden_fences", "minecraft:wooden_pressure_plates", "minecraft:wooden_trapdoors", "minecraft:saplings", "minecraft:logs", "minecraft:dark_oak_logs", "minecraft:oak_logs", "minecraft:birch_logs", "minecraft:acacia_logs", "minecraft:jungle_logs", "minecraft:spruce_logs", "minecraft:banners", "minecraft:sand", "minecraft:walls", "minecraft:anvil", "minecraft:leaves", "minecraft:small_flowers", "minecraft:beds", "minecraft:fishes", "minecraft:signs", "minecraft:music_discs", "minecraft:arrows", "forge:bones", "forge:bookshelves", "forge:chests/ender", "forge:chests/trapped", "forge:chests/wooden", "forge:cobblestone", "forge:crops/beetroot", "forge:crops/carrot", "forge:crops/nether_wart", "forge:crops/potato", "forge:crops/wheat", "forge:dusts/prismarine", "forge:dusts/redstone", "forge:dusts/glowstone", "forge:dyes", "forge:dyes/black", "forge:dyes/red", "forge:dyes/green", "forge:dyes/brown", "forge:dyes/blue", "forge:dyes/purple", "forge:dyes/cyan", "forge:dyes/light_gray", "forge:dyes/gray", "forge:dyes/pink", "forge:dyes/lime", "forge:dyes/yellow", "forge:dyes/light_blue", "forge:dyes/magenta", "forge:dyes/orange", "forge:dyes/white", "forge:eggs", "forge:ender_pearls", "forge:feathers", "forge:fence_gates", "forge:fence_gates/wooden", "forge:fences", "forge:fences/nether_brick", "forge:fences/wooden", "forge:gems/diamond", "forge:gems/emerald", "forge:gems/lapis", "forge:gems/prismarine", "forge:gems/quartz", "forge:glass", "forge:glass/black", "forge:glass/blue", "forge:glass/brown", "forge:glass/colorless", "forge:glass/cyan", "forge:glass/gray", "forge:glass/green", "forge:glass/light_blue", "forge:glass/light_gray", "forge:glass/lime", "forge:glass/magenta", "forge:glass/orange", "forge:glass/pink", "forge:glass/purple", "forge:glass/red", "forge:glass/white", "forge:glass/yellow", "forge:glass_panes", "forge:glass_panes/black", "forge:glass_panes/blue", "forge:glass_panes/brown", "forge:glass_panes/colorless", "forge:glass_panes/cyan", "forge:glass_panes/gray", "forge:glass_panes/green", "forge:glass_panes/light_blue", "forge:glass_panes/light_gray", "forge:glass_panes/lime", "forge:glass_panes/magenta", "forge:glass_panes/orange", "forge:glass_panes/pink", "forge:glass_panes/purple", "forge:glass_panes/red", "forge:glass_panes/white", "forge:glass_panes/yellow", "forge:gravel", "forge:gunpowder", "forge:heads", "forge:ingots/brick", "forge:ingots/gold", "forge:ingots/iron", "forge:ingots/nether_brick", "forge:leather", "forge:mushrooms", "forge:nether_stars", "forge:netherrack", "forge:nuggets/gold", "forge:nuggets/iron", "forge:obsidian", "forge:ores/coal", "forge:ores/diamond", "forge:ores/emerald", "forge:ores/gold", "forge:ores/iron", "forge:ores/lapis", "forge:ores/quartz", "forge:ores/redstone", "forge:rods/blaze", "forge:rods/wooden", "forge:sand", "forge:sand/colorless", "forge:sand/red", "forge:sandstone", "forge:seeds", "forge:seeds/beetroot", "forge:seeds/melon", "forge:seeds/pumpkin", "forge:seeds/wheat", "forge:slimeballs", "forge:stained_glass", "forge:stained_glass_panes", "forge:stone", "forge:storage_blocks/coal", "forge:storage_blocks/diamond", "forge:storage_blocks/emerald", "forge:storage_blocks/gold", "forge:storage_blocks/iron", "forge:storage_blocks/lapis", "forge:storage_blocks/quartz", "forge:storage_blocks/redstone", "forge:string"]
	#List of mobs Guards will target. They target all hostile mobs by default, but if a hostile mob isn't being targeted, try adding it here. 
	guardresourcelocations = ["minecraft:slime", "tconstruct:blueslime"]
	#Items consumed by citizens in the Library. 
	configliststudyitems = ["minecraft:paper;400;100", "minecraft:book;600;10"]
	#Items requested by Tavern visitors. 
	configlistrecruitmentitems = ["minecraft:hay_block;2", "minecraft:book;2", "minecraft:enchanted_book;9", "minecraft:diamond;9", "minecraft:emerald;8", "minecraft:baked_potato;1", "minecraft:gold_ingot;2", "minecraft:redstone;2", "minecraft:lapis_lazuli;2", "minecraft:cake;7", "minecraft:sunflower;5", "minecraft:honeycomb;6", "minecraft:quartz;3"]
	#List of ore blocks rarely found magically by miners (see "Ore Chance"). 
	luckyores = ["minecraft:coal_ore!64", "minecraft:iron_ore!32", "minecraft:gold_ore!16", "minecraft:redstone_ore!8", "minecraft:lapis_ore!4", "minecraft:diamond_ore!2", "minecraft:emerald_ore!1"]
	#List of materials a Crusher can reduce and what they convert into, separated by exclamation marks. 
	crusherproduction = ["minecraft:cobblestone!minecraft:gravel", "minecraft:gravel!minecraft:sand", "minecraft:sand!minecraft:clay"]
	#List of materials a sifter can use as a mesh material, along with bonus weights 
	siftermeshes = ["minecraft:string,0", "minecraft:flint,0.1", "minecraft:iron_ingot,0.1", "minecraft:diamond,0.1"]
	#The items and item-tags that the Florist can plant. 
	listofplantables = ["minecraft:sunflower", "minecraft:lilac", "minecraft:rose_bush", "minecraft:peony", "minecraft:tall_grass", "minecraft:large_fern", "minecraft:fern", "biomesoplenty:small_flowers", "minecraft:small_flowers"]
	#The possible enchantments for the enchanter. 
	enchantments = ["1,minecraft:aqua_affinity,1,50", "1,minecraft:bane_of_arthropods,1,50", "1,minecraft:blast_protection,1,50", "1,minecraft:depth_strider,1,50", "1,minecraft:feather_falling,1,50", "1,minecraft:fire_aspect,1,50", "1,minecraft:fire_protection,1,50", "1,minecraft:flame,1,50", "1,minecraft:frost_walker,1,50", "1,minecraft:knockback,1,50", "1,minecraft:looting,1,50", "1,minecraft:power,1,50", "1,minecraft:projectile_protection,1,50", "1,minecraft:protection,1,50", "1,minecraft:punch,1,50", "1,minecraft:respiration,1,50", "1,minecraft:sharpness,1,50", "1,minecraft:smite,1,50", "1,minecraft:sweeping,1,50", "1,minecraft:unbreaking,1,50", "3,minecolonies:raider_damage_enchant,1,15", "2,minecraft:aqua_affinity,2,25", "2,minecraft:bane_of_arthropods,2,25", "2,minecraft:blast_protection,2,25", "2,minecraft:depth_strider,2,25", "2,minecraft:feather_falling,2,25", "2,minecraft:fire_aspect,2,25", "2,minecraft:fire_protection,2,25", "2,minecraft:flame,2,25", "2,minecraft:frost_walker,2,25", "2,minecraft:knockback,2,25", "2,minecraft:looting,2,25", "2,minecraft:power,2,25", "2,minecraft:projectile_protection,2,25", "2,minecraft:protection,2,25", "2,minecraft:punch,2,25", "2,minecraft:respiration,2,25", "2,minecraft:sharpness,2,25", "2,minecraft:smite,2,25", "2,minecraft:sweeping,2,25", "2,minecraft:unbreaking,2,25", "3,minecraft:aqua_affinity,3,15", "3,minecraft:bane_of_arthropods,3,15", "3,minecraft:blast_protection,3,15", "3,minecraft:depth_strider,3,15", "3,minecraft:feather_falling,3,15", "3,minecraft:fire_aspect,3,15", "3,minecraft:fire_protection,3,15", "3,minecraft:flame,3,15", "3,minecraft:frost_walker,3,15", "3,minecraft:knockback,3,15", "3,minecraft:looting,3,15", "3,minecraft:power,3,15", "3,minecraft:projectile_protection,3,15", "3,minecraft:protection,3,15", "3,minecraft:punch,3,15", "3,minecraft:respiration,3,15", "3,minecraft:sharpness,3,15", "3,minecraft:smite,3,15", "3,minecraft:sweeping,3,15", "3,minecraft:unbreaking,3,15", "4,minecraft:aqua_affinity,4,5", "4,minecraft:bane_of_arthropods,4,5", "4,minecraft:blast_protection,4,5", "4,minecraft:depth_strider,4,5", "4,minecraft:feather_falling,4,5", "4,minecraft:fire_aspect,4,5", "4,minecraft:fire_protection,4,5", "4,minecraft:flame,4,5", "4,minecraft:frost_walker,4,5", "4,minecraft:infinity,1,5", "4,minecraft:knockback,4,5", "4,minecraft:looting,4,5", "4,minecraft:power,4,5", "4,minecraft:projectile_protection,4,5", "4,minecraft:protection,4,5", "4,minecraft:punch,4,5", "4,minecraft:respiration,4,5", "4,minecraft:sharpness,4,5", "4,minecraft:smite,4,5", "4,minecraft:sweeping,4,5", "4,minecraft:unbreaking,4,5", "5,minecraft:aqua_affinity,5,1", "5,minecraft:bane_of_arthropods,5,1", "5,minecraft:blast_protection,5,1", "5,minecraft:depth_strider,5,1", "5,minecraft:feather_falling,5,1", "5,minecraft:fire_aspect,5,1", "5,minecraft:fire_protection,5,1", "5,minecraft:flame,5,1", "5,minecraft:frost_walker,5,1", "5,minecraft:infinity,1,1", "5,minecraft:knockback,5,1", "5,minecraft:looting,5,1", "5,minecraft:mending,1,1", "5,minecraft:power,5,1", "5,minecraft:projectile_protection,5,1", "5,minecraft:protection,5,1", "5,minecraft:punch,5,1", "5,minecraft:respiration,5,1", "5,minecraft:sharpness,5,1", "5,minecraft:smite,5,1", "5,minecraft:sweeping,5,1", "5,minecolonies:raider_damage_enchant,2,3", "5,minecraft:unbreaking,5,1"]
	#Experience multiplier of the enchanter (how much more experience do they get from a citizen than they drain). [Default: 2.0] [Default: 2.000000, min: 1.000000, max: 10.000000]
	#Range: 1.0 ~ 10.0
	enchanterexperiencemultiplier = 2.0
	#Forester harvest trunk size for dynamic trees: 1-8. [Default: 5, min: 1, max: 5]
	#Range: 1 ~ 5
	dynamictreeharvestsize = 5
	#Offset for the maximum durability unenchanted rod a T2 Fishing Hut can use, compared to iron tools (250).  Thermal Foundation Iron requires +6.  T3 huts can use unenchanted rods of any durability level, so long as they can take damage at all.  Anything below -250 will only allow vanilla rods, except as allowed by T1. [Default: 6, min: -249, max: 250000]
	#Range: -249 ~ 250000
	fishingroddurabilityadjustt2 = 6
	#Offset for the maximum durability unenchanted rod a T1 Fishing Hut can use, compared to other wooden tools (59).  Vanilla rods always work, but equivalents would need +6.  Default value allows up to Thermal Foundation Silver.  Anything below -59 will only allow vanilla rods. [Default: 22, min: -58, max: 250000]
	#Range: -58 ~ 250000
	fishingroddurabilityadjustt1 = 22
	#All diseases citizens can get. The name, how common it is, and all ingredients to cure it. 
	diseases = ["Influenza,100,minecraft:carrot,minecraft:potato", "Measles,10,minecraft:dandelion,minecraft:kelp,minecraft:poppy", "Smallpox,1,minecraft:honey_bottle,minecraft:golden_apple"]
	#Enable inventory debugging. [Default: false]
	debuginventories = false

#All configurations related to pathfinding
[pathfinding]
	#Verbosity of pathfinding debug messages. [Default: 0, min: 0, max: 10]
	#Range: 0 ~ 10
	pathfindingdebugverbosity = 0
	#Minimum number of consecutive rails for citizens to use them. [Default: 5, min: 5, max: 100]
	#Range: 5 ~ 100
	minimumrailstopath = 5
	#Amount of additional threads to be used for pathfinding. [Default: 2, min: 1, max: 10]
	#Range: 1 ~ 10
	pathfindingmaxthreadcount = 2
	#Max amount of nodes (positions) to map during pathfinding. Lowering increases performance, but might lead to pathing glitches. [Default: 5000, min: 1, max: 10000]
	#Range: 1 ~ 10000
	pathfindingmaxnodes = 5000

#All configurations related to the request system
[requestSystem]
	#Should the request system show debug information? Useful if malfunctioning. [Default: false]
	enabledebuglogging = false
	#The maximal amount of tries that the request system will perform for retryable requests. Higher increases server load. [Default: 3, min: 1, max: 10]
	#Range: 1 ~ 10
	maximalretries = 3
	#The amount of ticks between retries of the request system for retryable requests. Lower increases server load. [Default: 1200, min: 30, max: 10000]
	#Range: 30 ~ 10000
	delaybetweenretries = 1200
	#Should the request system creatively resolve (if possible) when the player is required to resolve a request? [Default: false]
	creativeresolve = false
	#Should players be allowed to use the /mc colony requestsystem-reset command? [Default: false]
	canplayeruseresetcommand = false

#minecolonies.config.research.comment
[research]
	#minecolonies.config.tactictraining.comment 
	tactictraining = ["minecraft:iron_block*3"]
	#minecolonies.config.improvedswords.comment 
	improvedswords = ["minecraft:iron_block*6"]
	#minecolonies.config.squiretraining.comment 
	squiretraining = ["minecraft:shield*4"]
	#minecolonies.config.knighttraining.comment 
	knighttraining = ["minecraft:shield*8"]
	#minecolonies.config.captaintraining.comment 
	captaintraining = ["minecraft:shield*16"]
	#minecolonies.config.captainoftheguard.comment 
	captainoftheguard = ["minecraft:shield*27"]
	#minecolonies.config.improvedbows.comment 
	improvedbows = ["minecraft:iron_block*6"]
	#minecolonies.config.tickshot.comment 
	tickshot = ["minecraft:bow*5"]
	#minecolonies.config.multishot.comment 
	multishot = ["minecraft:bow*9"]
	#minecolonies.config.rapidshot.comment 
	rapidshot = ["minecraft:bow*18"]
	#minecolonies.config.masterbowman.comment 
	masterbowman = ["minecraft:bow*27"]
	#minecolonies.config.avoidance.comment 
	avoidance = ["minecraft:iron_block*3"]
	#minecolonies.config.parry.comment 
	parry = ["minecraft:iron_ingot*16"]
	#minecolonies.config.repost.comment 
	repost = ["minecraft:iron_ingot*32"]
	#minecolonies.config.duelist.comment 
	duelist = ["minecraft:iron_ingot*64"]
	#minecolonies.config.provost.comment 
	provost = ["minecraft:diamond*16"]
	#minecolonies.config.masterswordsman.comment 
	masterswordsman = ["minecraft:diamond*64"]
	#minecolonies.config.dodge.comment 
	dodge = ["minecraft:leather*16"]
	#minecolonies.config.improveddodge.comment 
	improveddodge = ["minecraft:leather*32"]
	#minecolonies.config.evasion.comment 
	evasion = ["minecraft:leather*64"]
	#minecolonies.config.improvedevasion.comment 
	improvedevasion = ["minecraft:diamond*16"]
	#minecolonies.config.agilearcher.comment 
	agilearcher = ["minecraft:diamond*64"]
	#minecolonies.config.improvedleather.comment 
	improvedleather = ["minecraft:leather*32"]
	#minecolonies.config.boiledleather.comment 
	boiledleather = ["minecraft:leather*64"]
	#minecolonies.config.ironskin.comment 
	ironskin = ["minecraft:iron_ingot*16"]
	#minecolonies.config.ironarmour.comment 
	ironarmour = ["minecraft:iron_ingot*32"]
	#minecolonies.config.steelarmour.comment 
	steelarmour = ["minecraft:iron_ingot*64"]
	#minecolonies.config.diamondskin.comment 
	diamondskin = ["minecraft:diamond*64"]
	#minecolonies.config.regeneration.comment 
	regeneration = ["minecraft:emerald*1"]
	#minecolonies.config.feint.comment 
	feint = ["minecraft:emerald*8"]
	#minecolonies.config.fear.comment 
	fear = ["minecraft:emerald*16"]
	#minecolonies.config.retreat.comment 
	retreat = ["minecraft:emerald*32"]
	#minecolonies.config.fullretreat.comment 
	fullretreat = ["minecraft:emerald*64"]
	#minecolonies.config.avoid.comment 
	avoid = ["minecraft:emerald*8"]
	#minecolonies.config.evade.comment 
	evade = ["minecraft:emerald*16"]
	#minecolonies.config.flee.comment 
	flee = ["minecraft:emerald*32"]
	#minecolonies.config.hotfoot.comment 
	hotfoot = ["minecraft:emerald*64"]
	#minecolonies.config.accuracy.comment 
	accuracy = ["minecraft:iron_ingot*16"]
	#minecolonies.config.quickdraw.comment 
	quickdraw = ["minecraft:iron_block*2"]
	#minecolonies.config.powerattack.comment 
	powerattack = ["minecraft:iron_block*4"]
	#minecolonies.config.cleave.comment 
	cleave = ["minecraft:iron_block*8"]
	#minecolonies.config.mightycleave.comment 
	mightycleave = ["minecraft:iron_block*16"]
	#minecolonies.config.whirlwind.comment 
	whirlwind = ["minecraft:iron_block*32"]
	#minecolonies.config.preciseshot.comment 
	preciseshot = ["minecraft:flint*16"]
	#minecolonies.config.penetratingshot.comment 
	penetratingshot = ["minecraft:flint*32"]
	#minecolonies.config.piercingshot.comment 
	piercingshot = ["minecraft:flint*64"]
	#minecolonies.config.woundingshot.comment 
	woundingshot = ["minecraft:flint*128"]
	#minecolonies.config.deadlyaim.comment 
	deadlyaim = ["minecraft:flint*256"]
	#minecolonies.config.higherlearning.comment 
	higherlearning = ["minecraft:book*3"]
	#minecolonies.config.morebooks.comment 
	morebooks = ["minecraft:book*6"]
	#minecolonies.config.bookworm.comment 
	bookworm = ["minecraft:bookshelf*6"]
	#minecolonies.config.bachelor.comment 
	bachelor = ["minecraft:bookshelf*12"]
	#minecolonies.config.master.comment 
	master = ["minecraft:bookshelf*32"]
	#minecolonies.config.phd.comment 
	phd = ["minecraft:bookshelf*64"]
	#minecolonies.config.nurture.comment 
	nurture = ["minecraft:cooked_chicken*32"]
	#minecolonies.config.hormones.comment 
	hormones = ["minecraft:cooked_chicken*64"]
	#minecolonies.config.puberty.comment 
	puberty = ["minecraft:cooked_chicken*128"]
	#minecolonies.config.growth.comment 
	growth = ["minecraft:cooked_chicken*256"]
	#minecolonies.config.beanstalk.comment 
	beanstalk = ["minecraft:cooked_chicken*512"]
	#minecolonies.config.keen.comment 
	keen = ["minecraft:book*3"]
	#minecolonies.config.outpost.comment 
	outpost = ["minecraft:cooked_beef*64"]
	#minecolonies.config.hamlet.comment 
	hamlet = ["minecraft:cooked_beef*128"]
	#minecolonies.config.village.comment 
	village = ["minecraft:cooked_beef*256"]
	#minecolonies.config.city.comment 
	city = ["minecraft:cooked_beef*512"]
	#minecolonies.config.diligent.comment 
	diligent = ["minecraft:book*6"]
	#minecolonies.config.studious.comment 
	studious = ["minecraft:book*12"]
	#minecolonies.config.scholarly.comment 
	scholarly = ["minecraft:book*24"]
	#minecolonies.config.reflective.comment 
	reflective = ["minecraft:book*48"]
	#minecolonies.config.academic.comment 
	academic = ["minecraft:book*128"]
	#minecolonies.config.rails.comment 
	rails = ["minecraft:rail*64"]
	#minecolonies.config.nimble.comment 
	nimble = ["minecraft:rabbit_foot*1"]
	#minecolonies.config.agile.comment 
	agile = ["minecraft:rabbit_foot*10"]
	#minecolonies.config.swift.comment 
	swift = ["minecraft:rabbit_foot*32"]
	#minecolonies.config.athlete.comment 
	athlete = ["minecraft:rabbit_foot*64"]
	#minecolonies.config.stamina.comment 
	stamina = ["minecraft:carrot*1"]
	#minecolonies.config.resistance.comment 
	resistance = ["minecraft:golden_apple*1"]
	#minecolonies.config.resilience.comment 
	resilience = ["minecraft:golden_apple*8"]
	#minecolonies.config.vitality.comment 
	vitality = ["minecraft:golden_apple*16"]
	#minecolonies.config.fortitude.comment 
	fortitude = ["minecraft:golden_apple*32"]
	#minecolonies.config.indefatigability.comment 
	indefatigability = ["minecraft:golden_apple*64"]
	#minecolonies.config.bandaid.comment 
	bandaid = ["minecraft:golden_carrot*1"]
	#minecolonies.config.healingcream.comment 
	healingcream = ["minecraft:golden_carrot*8"]
	#minecolonies.config.bandages.comment 
	bandages = ["minecraft:golden_carrot*16"]
	#minecolonies.config.compress.comment 
	compress = ["minecraft:golden_carrot*32"]
	#minecolonies.config.cast.comment 
	cast = ["minecraft:golden_carrot*64"]
	#minecolonies.config.gourmand.comment 
	gourmand = ["minecraft:cookie*32"]
	#minecolonies.config.gorger.comment 
	gorger = ["minecraft:cookie*64"]
	#minecolonies.config.stuffer.comment 
	stuffer = ["minecraft:cookie*128"]
	#minecolonies.config.epicure.comment 
	epicure = ["minecraft:cookie*256"]
	#minecolonies.config.glutton.comment 
	glutton = ["minecraft:cookie*512"]
	#minecolonies.config.circus.comment 
	circus = ["minecraft:cake*1"]
	#minecolonies.config.festival.comment 
	festival = ["minecraft:cake*9"]
	#minecolonies.config.nightowl.comment 
	nightowl = ["minecraft:golden_carrot*25"]
	#minecolonies.config.spectacle.comment 
	spectacle = ["minecraft:cake*18"]
	#minecolonies.config.nightowl2.comment 
	nightowl2 = ["minecraft:golden_carrot*75"]
	#minecolonies.config.opera.comment 
	opera = ["minecraft:cake*27"]
	#minecolonies.config.theater.comment 
	theater = ["minecraft:enchanted_golden_apple*16"]
	#minecolonies.config.firstaid.comment 
	firstaid = ["minecraft:hay_block*8"]
	#minecolonies.config.firstaid2.comment 
	firstaid2 = ["minecraft:hay_block*16"]
	#minecolonies.config.livesaver.comment 
	livesaver = ["minecraft:hay_block*32"]
	#minecolonies.config.livesaver2.comment 
	livesaver2 = ["minecraft:hay_block*64"]
	#minecolonies.config.guardianangel.comment 
	guardianangel = ["minecraft:hay_block*128"]
	#minecolonies.config.guardianangel2.comment 
	guardianangel2 = ["minecraft:hay_block*256"]
	#minecolonies.config.whatyaneed.comment 
	whatyaneed = ["minecraft:redstone*64"]
	#minecolonies.config.enhanced_gates1.comment 
	enhanced_gates1 = ["minecolonies:gate_wood*64", "minecolonies:ancienttome*2", "minecraft:iron_block*5"]
	#minecolonies.config.enhanced_gates2.comment 
	enhanced_gates2 = ["minecolonies:gate_iron*64", "minecolonies:ancienttome*2", "minecraft:obsidian*32"]
	#minecolonies.config.stringwork.comment 
	stringwork = ["minecraft:string*16"]
	#minecolonies.config.thoselungs.comment 
	thoselungs = ["minecraft:glass*64"]
	#minecolonies.config.rainbowheaven.comment 
	rainbowheaven = ["minecraft:poppy*64"]
	#minecolonies.config.veinminer.comment 
	veinminer = ["minecraft:iron_ore*32"]
	#minecolonies.config.goodveins.comment 
	goodveins = ["minecraft:iron_ore*64"]
	#minecolonies.config.richveins.comment 
	richveins = ["minecraft:gold_ore*32"]
	#minecolonies.config.amazingveins.comment 
	amazingveins = ["minecraft:gold_ore*64"]
	#minecolonies.config.motherlode.comment 
	motherlode = ["minecraft:diamond_ore*64"]
	#minecolonies.config.ability.comment 
	ability = ["minecraft:iron_ingot*64"]
	#minecolonies.config.skills.comment 
	skills = ["minecraft:iron_ingot*128"]
	#minecolonies.config.tools.comment 
	tools = ["minecraft:iron_ingot*256"]
	#minecolonies.config.seemsautomatic.comment 
	seemsautomatic = ["minecraft:iron_ingot*512"]
	#minecolonies.config.madness.comment 
	madness = ["minecraft:iron_ingot*1024"]
	#minecolonies.config.hittingiron.comment 
	hittingiron = ["minecraft:anvil*1"]
	#minecolonies.config.stonecake.comment 
	stonecake = ["minecraft:chiseled_stone_bricks*64"]
	#minecolonies.config.strong.comment 
	strong = ["minecraft:diamond*8"]
	#minecolonies.config.hardened.comment 
	hardened = ["minecraft:diamond*16"]
	#minecolonies.config.reinforced.comment 
	reinforced = ["minecraft:diamond*32"]
	#minecolonies.config.steelbracing.comment 
	steelbracing = ["minecraft:diamond*64"]
	#minecolonies.config.diamondcoated.comment 
	diamondcoated = ["minecraft:diamond*128"]
	#minecolonies.config.memoryaid.comment 
	memoryaid = ["minecraft:paper*32"]
	#minecolonies.config.cheatsheet.comment 
	cheatsheet = ["minecraft:paper*64"]
	#minecolonies.config.recipebook.comment 
	recipebook = ["minecraft:paper*128"]
	#minecolonies.config.rtm.comment 
	rtm = ["minecraft:paper*256"]
	#minecolonies.config.rainman.comment 
	rainman = ["minecraft:salmon_bucket*27"]
	#minecolonies.config.woodwork.comment 
	woodwork = ["minecraft:oak_planks*64"]
	#minecolonies.config.sieving.comment 
	sieving = ["minecraft:string*64"]
	#minecolonies.config.space.comment 
	space = ["minecolonies:blockminecoloniesrack*16"]
	#minecolonies.config.capacity.comment 
	capacity = ["minecolonies:blockminecoloniesrack*32"]
	#minecolonies.config.fullstock.comment 
	fullstock = ["minecolonies:blockminecoloniesrack*64"]
	#minecolonies.config.theflintstones.comment 
	theflintstones = ["minecraft:stone_bricks*64"]
	#minecolonies.config.rockingroll.comment 
	rockingroll = ["minecraft:stone*64"]
	#minecolonies.config.hot.comment 
	hot = ["minecraft:lava_bucket*4"]
	#minecolonies.config.isthisredstone.comment 
	isthisredstone = ["minecraft:redstone*128"]
	#minecolonies.config.redstonepowered.comment 
	redstonepowered = ["minecraft:redstone*256"]
	#minecolonies.config.heavymachinery.comment 
	heavymachinery = ["minecraft:redstone*512"]
	#minecolonies.config.whatisthisspeed.comment 
	whatisthisspeed = ["minecraft:redstone*1024"]
	#minecolonies.config.lightning.comment 
	lightning = ["minecraft:redstone*2048"]
	#minecolonies.config.biodegradable.comment 
	biodegradable = ["minecraft:bone_meal*64"]
	#minecolonies.config.flowerpower.comment 
	flowerpower = ["minecolonies:compost*64"]
	#minecolonies.config.letitgrow.comment 
	letitgrow = ["minecolonies:compost*16"]
	#minecolonies.config.bonemeal.comment 
	bonemeal = ["minecraft:wheat_seeds*64"]
	#minecolonies.config.dung.comment 
	dung = ["minecraft:wheat_seeds*128"]
	#minecolonies.config.compost.comment 
	compost = ["minecraft:wheat_seeds*256"]
	#minecolonies.config.fertilizer.comment 
	fertilizer = ["minecraft:wheat_seeds*512"]
	#minecolonies.config.magiccompost.comment 
	magiccompost = ["minecraft:wheat_seeds*2048"]
	#minecolonies.config.loaded.comment 
	loaded = ["minecraft:emerald*128"]
	#minecolonies.config.heavilyloaded.comment 
	heavilyloaded = ["minecraft:emerald*256"]
	#minecolonies.config.deeppockets.comment 
	deeppockets = ["minecraft:emerald*64"]
	#minecolonies.config.taunt.comment 
	taunt = ["minecraft:rotten_flesh*8", "minecraft:bone*8", "minecraft:spider_eye*8"]
	#minecolonies.config.arrowuse.comment 
	arrowuse = ["minecraft:arrow*64"]
	#minecolonies.config.arrowpierce.comment 
	arrowpierce = ["minecraft:arrow*64", "minecraft:redstone*64"]
	#minecolonies.config.knockbackaoe.comment 
	knockbackaoe = ["minecraft:redstone*64", "minecraft:gold_ingot*64", "minecraft:lapis_lazuli*128"]
	#minecolonies.config.knowtheend.comment 
	knowtheend = ["minecraft:chorus_fruit*64"]
	#minecolonies.config.morescrolls.comment 
	morescrolls = ["minecraft:paper*64", "minecolonies:ancienttome*1", "minecraft:lapis_lazuli*64"]
	#minecolonies.config.gildedhammer.comment 
	gildedhammer = ["minecraft:gravel*64", "minecraft:sand*64", "minecraft:clay*64"]
	#minecolonies.config.doubletrouble.comment 
	doubletrouble = ["minecraft:bamboo*64", "minecraft:sugar_cane*64", "minecraft:cactus*64"]
	#minecolonies.config.hotboots.comment 
	hotboots = ["minecraft:leather*32", "minecraft:iron_ingot*16"]
	#minecolonies.config.pavetheroad.comment 
	pavetheroad = ["minecraft:white_concrete*32"]

